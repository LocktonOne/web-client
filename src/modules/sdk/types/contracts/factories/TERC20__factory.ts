/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TERC20, TERC20Interface } from "../TERC20";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "contractURI",
        type: "string",
      },
    ],
    name: "ContractURIChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "BURN_PERMISSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CHANGE_METADATA_PERMISSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MINT_PERMISSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RECEIVE_PERMISSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SPEND_PERMISSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TERC20_RESOURCE",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "symbol",
            type: "string",
          },
          {
            internalType: "string",
            name: "contractURI",
            type: "string",
          },
          {
            internalType: "uint8",
            name: "decimals",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "totalSupplyCap",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "permissions",
            type: "uint8",
          },
        ],
        internalType: "struct ITERC20.ConstructorParams",
        name: "params_",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "__TERC20_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "contractURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getInjector",
    outputs: [
      {
        internalType: "address",
        name: "injector_",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTokenPermissions",
    outputs: [
      {
        internalType: "string[]",
        name: "permissions_",
        type: "string[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "mintTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "contractURI_",
        type: "string",
      },
    ],
    name: "setContractMetadata",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registryAddress_",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "setDependencies",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "injector_",
        type: "address",
      },
    ],
    name: "setInjector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenPermissions",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupplyCap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611b08806100206000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c80638cb941cc116100f9578063c3b3cd5b11610097578063e8a3d48511610071578063e8a3d48514610428578063f254262d14610430578063f2fd311214610445578063fce550371461046b57600080fd5b8063c3b3cd5b146103cd578063dc118b27146103f2578063dd62ed3e1461041557600080fd5b8063a9059cbb116100d3578063a9059cbb14610370578063af4b908314610383578063b9fa2b30146103b1578063bb102aea146103c457600080fd5b80638cb941cc1461034257806395d89b4114610355578063a457c2d71461035d57600080fd5b80633e3b5b191161016657806365e88f7f1161014057806365e88f7f146102e657806369130451146102f357806370a082311461030657806379cc67901461032f57600080fd5b80633e3b5b1914610286578063449a52f8146102ae5780635351d05e146102c357600080fd5b806323b872dd116101a257806323b872dd1461021c578063303ebdb31461022f578063313ce56714610253578063395093511461027357600080fd5b806306fdde03146101c9578063095ea7b3146101e757806318160ddd1461020a575b600080fd5b6101d161047e565b6040516101de9190611424565b60405180910390f35b6101fa6101f5366004611453565b610510565b60405190151581526020016101de565b6035545b6040519081526020016101de565b6101fa61022a36600461147f565b61052a565b6101d16040518060400160405280600581526020016414d411539160da1b81525081565b606654600160a01b900460ff165b60405160ff90911681526020016101de565b6101fa610281366004611453565b61054e565b600080516020611ab3833981519152546040516001600160a01b0390911681526020016101de565b6102c16102bc366004611453565b610570565b005b6101d160405180604001604052806004815260200163212aa92760e11b81525081565b6068546102619060ff1681565b6102c1610301366004611509565b6105ea565b61020e61031436600461155e565b6001600160a01b031660009081526033602052604090205490565b6102c161033d366004611453565b610695565b6102c161035036600461155e565b6106ba565b6101d16106db565b6101fa61036b366004611453565b6106ea565b6101fa61037e366004611453565b610765565b6101d16040518060400160405280600f81526020016e4348414e47455f4d4554414441544160881b81525081565b6102c16103bf36600461157b565b610773565b61020e60675481565b6101d16040518060400160405280600681526020016505445524332360d41b81525081565b6101d1604051806040016040528060048152602001631352539560e21b81525081565b61020e6104233660046115df565b6109ad565b6101d16109d8565b6104386109e7565b6040516101de9190611618565b6101d1604051806040016040528060078152602001665245434549564560c81b81525081565b6102c161047936600461167a565b610a9e565b60606036805461048d906116bc565b80601f01602080910402602001604051908101604052809291908181526020018280546104b9906116bc565b80156105065780601f106104db57610100808354040283529160200191610506565b820191906000526020600020905b8154815290600101906020018083116104e957829003601f168201915b5050505050905090565b60003361051e818585610af4565b60019150505b92915050565b600033610538858285610c18565b610543858585610c8c565b506001949350505050565b60003361051e81858561056183836109ad565b61056b919061170c565b610af4565b606754158061059457506067548161058760355490565b610591919061170c565b11155b6105dc5760405162461bcd60e51b815260206004820152601460248201527315115490cc8c0e8818d85c08195e18d95959195960621b60448201526064015b60405180910390fd5b6105e68282610e42565b5050565b6105f2610f0f565b6000839050806001600160a01b031663085ec2976040518163ffffffff1660e01b8152600401602060405180830381865afa158015610635573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610659919061171f565b606680546001600160a01b0319166001600160a01b03929092169190911790555033600080516020611ab383398151915255505050565b505050565b6001600160a01b03821633146106b0576106b0823383610c18565b6105e68282610f93565b6106c2610f0f565b6106d881600080516020611ab383398151915255565b50565b60606037805461048d906116bc565b600033816106f882866109ad565b9050838110156107585760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016105d3565b6105438286868403610af4565b60003361051e818585610c8c565b600054610100900460ff16158080156107935750600054600160ff909116105b806107ad5750303b1580156107ad575060005460ff166001145b6108105760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016105d3565b6000805460ff191660011790558015610833576000805461ff0019166101001790555b6108bc610840858061173c565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061088292505050602087018761173c565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506110d392505050565b6109066108cc604086018661173c565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061110492505050565b6109166080850160608601611783565b6066805460ff92909216600160a01b0260ff60a01b19909216919091179055608084013560675561094d60c0850160a08601611783565b6068805460ff191660ff9290921691909117905580156109a7576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b60606065805461048d906116bc565b60408051600580825260c08201909252606091816020015b60608152602001906001900390816109ff5790505090506000805b60058160ff161015610a995760685460ff9081169082161c60019081169003610a8957610a5a8160ff166004811115610a5557610a556117bc565b611137565b838360ff1681518110610a6f57610a6f6117d2565b60200260200101819052508180610a85906117e8565b9250505b610a92816117e8565b9050610a1a565b505090565b610aa933600461124c565b6065610ab6828483611855565b507fd5ee5eaf65263bab5d569890714d123ad48a9e54409d35e71d374f3dd300bba08282604051610ae8929190611916565b60405180910390a15050565b6001600160a01b038316610b565760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016105d3565b6001600160a01b038216610bb75760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016105d3565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610c2484846109ad565b905060001981146109a75781811015610c7f5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016105d3565b6109a78484848403610af4565b6001600160a01b038316610cf05760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016105d3565b6001600160a01b038216610d525760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016105d3565b610d5d838383611356565b6001600160a01b03831660009081526033602052604090205481811015610dd55760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016105d3565b6001600160a01b0380851660008181526033602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610e359086815260200190565b60405180910390a36109a7565b6001600160a01b038216610e985760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016105d3565b610ea460008383611356565b8060356000828254610eb6919061170c565b90915550506001600160a01b0382166000818152603360209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6000610f27600080516020611ab38339815191525490565b90506001600160a01b0381161580610f4757506001600160a01b03811633145b6106d85760405162461bcd60e51b815260206004820152601a60248201527f446570656e64616e743a206e6f7420616e20696e6a6563746f7200000000000060448201526064016105d3565b6001600160a01b038216610ff35760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016105d3565b610fff82600083611356565b6001600160a01b038216600090815260336020526040902054818110156110735760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016105d3565b6001600160a01b03831660008181526033602090815260408083208686039055603580548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b600054610100900460ff166110fa5760405162461bcd60e51b81526004016105d390611945565b6105e6828261139e565b600054610100900460ff1661112b5760405162461bcd60e51b81526004016105d390611945565b60656105e68282611990565b6060600082600481111561114d5761114d6117bc565b036111725750506040805180820190915260048152631352539560e21b602082015290565b6001826004811115611186576111866117bc565b036111ab575050604080518082019091526004815263212aa92760e11b602082015290565b60028260048111156111bf576111bf6117bc565b036111e557505060408051808201909152600581526414d411539160da1b602082015290565b60038260048111156111f9576111f96117bc565b036112215750506040805180820190915260078152665245434549564560c81b602082015290565b505060408051808201909152600f81526e4348414e47455f4d4554414441544160881b602082015290565b60665460408051808201909152600681526505445524332360d41b60208201526001600160a01b0390911690637951c6da90849061128985611137565b6040518463ffffffff1660e01b81526004016112a793929190611a50565b602060405180830381865afa1580156112c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112e89190611a90565b806113125750806004811115611300576113006117bc565b60685460ff90811691161c6001908116145b6105e65760405162461bcd60e51b815260206004820152601560248201527415115490cc8c0e881858d8d95cdcc819195b9a5959605a1b60448201526064016105d3565b6001600160a01b03831661137a5761136f33600061124c565b61069082600361124c565b6001600160a01b0382166113935761069083600161124c565b61136f83600261124c565b600054610100900460ff166113c55760405162461bcd60e51b81526004016105d390611945565b60366113d18382611990565b5060376106908282611990565b6000815180845260005b81811015611404576020818501810151868301820152016113e8565b506000602082860101526020601f19601f83011685010191505092915050565b60208152600061143760208301846113de565b9392505050565b6001600160a01b03811681146106d857600080fd5b6000806040838503121561146657600080fd5b82356114718161143e565b946020939093013593505050565b60008060006060848603121561149457600080fd5b833561149f8161143e565b925060208401356114af8161143e565b929592945050506040919091013590565b60008083601f8401126114d257600080fd5b50813567ffffffffffffffff8111156114ea57600080fd5b60208301915083602082850101111561150257600080fd5b9250929050565b60008060006040848603121561151e57600080fd5b83356115298161143e565b9250602084013567ffffffffffffffff81111561154557600080fd5b611551868287016114c0565b9497909650939450505050565b60006020828403121561157057600080fd5b81356114378161143e565b60008060006040848603121561159057600080fd5b833567ffffffffffffffff808211156115a857600080fd5b9085019060c082880312156115bc57600080fd5b909350602085013590808211156115d257600080fd5b50611551868287016114c0565b600080604083850312156115f257600080fd5b82356115fd8161143e565b9150602083013561160d8161143e565b809150509250929050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561166d57603f1988860301845261165b8583516113de565b9450928501929085019060010161163f565b5092979650505050505050565b6000806020838503121561168d57600080fd5b823567ffffffffffffffff8111156116a457600080fd5b6116b0858286016114c0565b90969095509350505050565b600181811c908216806116d057607f821691505b6020821081036116f057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b80820180821115610524576105246116f6565b60006020828403121561173157600080fd5b81516114378161143e565b6000808335601e1984360301811261175357600080fd5b83018035915067ffffffffffffffff82111561176e57600080fd5b60200191503681900382131561150257600080fd5b60006020828403121561179557600080fd5b813560ff8116811461143757600080fd5b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600060ff821660ff81036117fe576117fe6116f6565b60010192915050565b601f82111561069057600081815260208120601f850160051c8101602086101561182e5750805b601f850160051c820191505b8181101561184d5782815560010161183a565b505050505050565b67ffffffffffffffff83111561186d5761186d6117a6565b6118818361187b83546116bc565b83611807565b6000601f8411600181146118b5576000851561189d5750838201355b600019600387901b1c1916600186901b17835561190f565b600083815260209020601f19861690835b828110156118e657868501358255602094850194600190920191016118c6565b50868210156119035760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b815167ffffffffffffffff8111156119aa576119aa6117a6565b6119be816119b884546116bc565b84611807565b602080601f8311600181146119f357600084156119db5750858301515b600019600386901b1c1916600185901b17855561184d565b600085815260208120601f198616915b82811015611a2257888601518255948401946001909101908401611a03565b5085821015611a405787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6001600160a01b0384168152606060208201819052600090611a74908301856113de565b8281036040840152611a8681856113de565b9695505050505050565b600060208284031215611aa257600080fd5b8151801515811461143757600080fdfe3d1f25f1ac447e55e7fec744471c4dab1c6a2b6ffb897825f9ea3d2e8c9be583a26469706673582212203c0bfdc05cae9380dd566b6493ab980bf87cc3da115262ea207f27ffc1c8e44264736f6c63430008110033";

type TERC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TERC20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TERC20__factory extends ContractFactory {
  constructor(...args: TERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(overrides?: Overrides & { from?: string }): Promise<TERC20> {
    return super.deploy(overrides || {}) as Promise<TERC20>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TERC20 {
    return super.attach(address) as TERC20;
  }
  override connect(signer: Signer): TERC20__factory {
    return super.connect(signer) as TERC20__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TERC20Interface {
    return new utils.Interface(_abi) as TERC20Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): TERC20 {
    return new Contract(address, _abi, signerOrProvider) as TERC20;
  }
}
