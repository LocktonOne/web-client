/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TERC20, TERC20Interface } from "../TERC20";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "contractURI",
        type: "string",
      },
    ],
    name: "ContractURIChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "BURN_PERMISSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CHANGE_METADATA_PERMISSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MINT_PERMISSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RECEIVE_PERMISSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SPEND_PERMISSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TERC20_RESOURCE",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "symbol",
            type: "string",
          },
          {
            internalType: "string",
            name: "contractURI",
            type: "string",
          },
          {
            internalType: "uint8",
            name: "decimals",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "totalSupplyCap",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "permissions",
            type: "uint8",
          },
        ],
        internalType: "struct ITERC20.ConstructorParams",
        name: "params_",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "resource_",
        type: "string",
      },
    ],
    name: "__TERC20_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "contractURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getInjector",
    outputs: [
      {
        internalType: "address",
        name: "injector_",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTokenPermissions",
    outputs: [
      {
        internalType: "string[]",
        name: "permissions_",
        type: "string[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "mintTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "contractURI_",
        type: "string",
      },
    ],
    name: "setContractMetadata",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registryAddress_",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "setDependencies",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "injector_",
        type: "address",
      },
    ],
    name: "setInjector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenPermissions",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupplyCap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611bd5806100206000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c80638cb941cc116100f9578063c3b3cd5b11610097578063e8a3d48511610071578063e8a3d4851461040b578063f254262d14610413578063f2fd311214610428578063fce550371461044e57600080fd5b8063c3b3cd5b146103cd578063dc118b27146103d5578063dd62ed3e146103f857600080fd5b8063a9059cbb116100d3578063a9059cbb14610370578063af4b908314610383578063b9fa2b30146103b1578063bb102aea146103c457600080fd5b80638cb941cc1461034257806395d89b4114610355578063a457c2d71461035d57600080fd5b80633e3b5b191161016657806365e88f7f1161014057806365e88f7f146102e657806369130451146102f357806370a082311461030657806379cc67901461032f57600080fd5b80633e3b5b1914610286578063449a52f8146102ae5780635351d05e146102c357600080fd5b806323b872dd116101a257806323b872dd1461021c578063303ebdb31461022f578063313ce56714610253578063395093511461027357600080fd5b806306fdde03146101c9578063095ea7b3146101e757806318160ddd1461020a575b600080fd5b6101d1610461565b6040516101de9190611483565b60405180910390f35b6101fa6101f53660046114b2565b6104f3565b60405190151581526020016101de565b6035545b6040519081526020016101de565b6101fa61022a3660046114de565b61050d565b6101d16040518060400160405280600581526020016414d411539160da1b81525081565b606754600160a01b900460ff165b60405160ff90911681526020016101de565b6101fa6102813660046114b2565b610531565b600080516020611b80833981519152546040516001600160a01b0390911681526020016101de565b6102c16102bc3660046114b2565b610553565b005b6101d160405180604001604052806004815260200163212aa92760e11b81525081565b6069546102619060ff1681565b6102c1610301366004611568565b6105cd565b61020e6103143660046115bd565b6001600160a01b031660009081526033602052604090205490565b6102c161033d3660046114b2565b610678565b6102c16103503660046115bd565b61069d565b6101d16106be565b6101fa61036b3660046114b2565b6106cd565b6101fa61037e3660046114b2565b610748565b6101d16040518060400160405280600f81526020016e4348414e47455f4d4554414441544160881b81525081565b6102c16103bf3660046115da565b610756565b61020e60685481565b6101d161099e565b6101d1604051806040016040528060048152602001631352539560e21b81525081565b61020e61040636600461163e565b610a2c565b6101d1610a57565b61041b610a66565b6040516101de9190611677565b6101d1604051806040016040528060078152602001665245434549564560c81b81525081565b6102c161045c3660046116d9565b610b1d565b6060603680546104709061171b565b80601f016020809104026020016040519081016040528092919081815260200182805461049c9061171b565b80156104e95780601f106104be576101008083540402835291602001916104e9565b820191906000526020600020905b8154815290600101906020018083116104cc57829003601f168201915b5050505050905090565b600033610501818585610b73565b60019150505b92915050565b60003361051b858285610c97565b610526858585610d0b565b506001949350505050565b6000336105018185856105448383610a2c565b61054e919061176b565b610b73565b606854158061057757506068548161056a60355490565b610574919061176b565b11155b6105bf5760405162461bcd60e51b815260206004820152601460248201527315115490cc8c0e8818d85c08195e18d95959195960621b60448201526064015b60405180910390fd5b6105c98282610ec1565b5050565b6105d5610f8e565b6000839050806001600160a01b031663085ec2976040518163ffffffff1660e01b8152600401602060405180830381865afa158015610618573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063c919061177e565b606780546001600160a01b0319166001600160a01b03929092169190911790555033600080516020611b8083398151915255505050565b505050565b6001600160a01b038216331461069357610693823383610c97565b6105c98282611012565b6106a5610f8e565b6106bb81600080516020611b8083398151915255565b50565b6060603780546104709061171b565b600033816106db8286610a2c565b90508381101561073b5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016105b6565b6105268286868403610b73565b600033610501818585610d0b565b600054610100900460ff16158080156107765750600054600160ff909116105b806107905750303b158015610790575060005460ff166001145b6107f35760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016105b6565b6000805460ff191660011790558015610816576000805461ff0019166101001790555b61089f610823858061179b565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061086592505050602087018761179b565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061115292505050565b6108e96108af604086018661179b565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061118392505050565b60666108f6838583611846565b506109076080850160608601611907565b6067805460ff92909216600160a01b0260ff60a01b19909216919091179055608084013560685561093e60c0850160a08601611907565b6069805460ff191660ff929092169190911790558015610998576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b606680546109ab9061171b565b80601f01602080910402602001604051908101604052809291908181526020018280546109d79061171b565b8015610a245780601f106109f957610100808354040283529160200191610a24565b820191906000526020600020905b815481529060010190602001808311610a0757829003601f168201915b505050505081565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b6060606580546104709061171b565b60408051600580825260c08201909252606091816020015b6060815260200190600190039081610a7e5790505090506000805b60058160ff161015610b185760695460ff9081169082161c60019081169003610b0857610ad98160ff166004811115610ad457610ad461192a565b6111b6565b838360ff1681518110610aee57610aee611940565b60200260200101819052508180610b0490611956565b9250505b610b1181611956565b9050610a99565b505090565b610b283360046112cb565b6065610b35828483611846565b507fd5ee5eaf65263bab5d569890714d123ad48a9e54409d35e71d374f3dd300bba08282604051610b67929190611975565b60405180910390a15050565b6001600160a01b038316610bd55760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016105b6565b6001600160a01b038216610c365760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016105b6565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610ca38484610a2c565b905060001981146109985781811015610cfe5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016105b6565b6109988484848403610b73565b6001600160a01b038316610d6f5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016105b6565b6001600160a01b038216610dd15760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016105b6565b610ddc8383836113b5565b6001600160a01b03831660009081526033602052604090205481811015610e545760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016105b6565b6001600160a01b0380851660008181526033602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610eb49086815260200190565b60405180910390a3610998565b6001600160a01b038216610f175760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016105b6565b610f23600083836113b5565b8060356000828254610f35919061176b565b90915550506001600160a01b0382166000818152603360209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6000610fa6600080516020611b808339815191525490565b90506001600160a01b0381161580610fc657506001600160a01b03811633145b6106bb5760405162461bcd60e51b815260206004820152601a60248201527f446570656e64616e743a206e6f7420616e20696e6a6563746f7200000000000060448201526064016105b6565b6001600160a01b0382166110725760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016105b6565b61107e826000836113b5565b6001600160a01b038216600090815260336020526040902054818110156110f25760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016105b6565b6001600160a01b03831660008181526033602090815260408083208686039055603580548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b600054610100900460ff166111795760405162461bcd60e51b81526004016105b6906119a4565b6105c982826113fd565b600054610100900460ff166111aa5760405162461bcd60e51b81526004016105b6906119a4565b60656105c982826119ef565b606060008260048111156111cc576111cc61192a565b036111f15750506040805180820190915260048152631352539560e21b602082015290565b60018260048111156112055761120561192a565b0361122a575050604080518082019091526004815263212aa92760e11b602082015290565b600282600481111561123e5761123e61192a565b0361126457505060408051808201909152600581526414d411539160da1b602082015290565b60038260048111156112785761127861192a565b036112a05750506040805180820190915260078152665245434549564560c81b602082015290565b505060408051808201909152600f81526e4348414e47455f4d4554414441544160881b602082015290565b6067546001600160a01b0316637951c6da8360666112e8856111b6565b6040518463ffffffff1660e01b815260040161130693929190611aaf565b602060405180830381865afa158015611323573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113479190611b5d565b80611371575080600481111561135f5761135f61192a565b60695460ff90811691161c6001908116145b6105c95760405162461bcd60e51b815260206004820152601560248201527415115490cc8c0e881858d8d95cdcc819195b9a5959605a1b60448201526064016105b6565b6001600160a01b0383166113d9576113ce3360006112cb565b6106738260036112cb565b6001600160a01b0382166113f2576106738360016112cb565b6113ce8360026112cb565b600054610100900460ff166114245760405162461bcd60e51b81526004016105b6906119a4565b603661143083826119ef565b50603761067382826119ef565b6000815180845260005b8181101561146357602081850181015186830182015201611447565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000611496602083018461143d565b9392505050565b6001600160a01b03811681146106bb57600080fd5b600080604083850312156114c557600080fd5b82356114d08161149d565b946020939093013593505050565b6000806000606084860312156114f357600080fd5b83356114fe8161149d565b9250602084013561150e8161149d565b929592945050506040919091013590565b60008083601f84011261153157600080fd5b50813567ffffffffffffffff81111561154957600080fd5b60208301915083602082850101111561156157600080fd5b9250929050565b60008060006040848603121561157d57600080fd5b83356115888161149d565b9250602084013567ffffffffffffffff8111156115a457600080fd5b6115b08682870161151f565b9497909650939450505050565b6000602082840312156115cf57600080fd5b81356114968161149d565b6000806000604084860312156115ef57600080fd5b833567ffffffffffffffff8082111561160757600080fd5b9085019060c0828803121561161b57600080fd5b9093506020850135908082111561163157600080fd5b506115b08682870161151f565b6000806040838503121561165157600080fd5b823561165c8161149d565b9150602083013561166c8161149d565b809150509250929050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156116cc57603f198886030184526116ba85835161143d565b9450928501929085019060010161169e565b5092979650505050505050565b600080602083850312156116ec57600080fd5b823567ffffffffffffffff81111561170357600080fd5b61170f8582860161151f565b90969095509350505050565b600181811c9082168061172f57607f821691505b60208210810361174f57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561050757610507611755565b60006020828403121561179057600080fd5b81516114968161149d565b6000808335601e198436030181126117b257600080fd5b83018035915067ffffffffffffffff8211156117cd57600080fd5b60200191503681900382131561156157600080fd5b634e487b7160e01b600052604160045260246000fd5b601f82111561067357600081815260208120601f850160051c8101602086101561181f5750805b601f850160051c820191505b8181101561183e5782815560010161182b565b505050505050565b67ffffffffffffffff83111561185e5761185e6117e2565b6118728361186c835461171b565b836117f8565b6000601f8411600181146118a6576000851561188e5750838201355b600019600387901b1c1916600186901b178355611900565b600083815260209020601f19861690835b828110156118d757868501358255602094850194600190920191016118b7565b50868210156118f45760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b60006020828403121561191957600080fd5b813560ff8116811461149657600080fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600060ff821660ff810361196c5761196c611755565b60010192915050565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b815167ffffffffffffffff811115611a0957611a096117e2565b611a1d81611a17845461171b565b846117f8565b602080601f831160018114611a525760008415611a3a5750858301515b600019600386901b1c1916600185901b17855561183e565b600085815260208120601f198616915b82811015611a8157888601518255948401946001909101908401611a62565b5085821015611a9f5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60018060a01b03841681526000602060608184015260008554611ad18161171b565b8060608701526080600180841660008114611af35760018114611b0d57611b3b565b60ff1985168984015283151560051b890183019550611b3b565b8a6000528660002060005b85811015611b335781548b8201860152908301908801611b18565b8a0184019650505b50505050508381036040850152611b52818661143d565b979650505050505050565b600060208284031215611b6f57600080fd5b8151801515811461149657600080fdfe3d1f25f1ac447e55e7fec744471c4dab1c6a2b6ffb897825f9ea3d2e8c9be583a26469706673582212209e387e095022d751e5af6a31da432259dfd18a75b1397e6c4ff28592d67bb07164736f6c63430008110033";

type TERC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TERC20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TERC20__factory extends ContractFactory {
  constructor(...args: TERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(overrides?: Overrides & { from?: string }): Promise<TERC20> {
    return super.deploy(overrides || {}) as Promise<TERC20>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TERC20 {
    return super.attach(address) as TERC20;
  }
  override connect(signer: Signer): TERC20__factory {
    return super.connect(signer) as TERC20__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TERC20Interface {
    return new utils.Interface(_abi) as TERC20Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): TERC20 {
    return new Contract(address, _abi, signerOrProvider) as TERC20;
  }
}
